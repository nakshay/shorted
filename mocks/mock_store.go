// Code generated by MockGen. DO NOT EDIT.
// Source: ./store.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStore is a mock of Store interface.
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore.
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance.
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// FindFullURL mocks base method.
func (m *MockStore) FindFullURL(key string) (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindFullURL", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// FindFullURL indicates an expected call of FindFullURL.
func (mr *MockStoreMockRecorder) FindFullURL(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindFullURL", reflect.TypeOf((*MockStore)(nil).FindFullURL), key)
}

// IsShortURLExists mocks base method.
func (m *MockStore) IsShortURLExists(key string) (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsShortURLExists", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// IsShortURLExists indicates an expected call of IsShortURLExists.
func (mr *MockStoreMockRecorder) IsShortURLExists(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsShortURLExists", reflect.TypeOf((*MockStore)(nil).IsShortURLExists), key)
}

// SaveShortURL mocks base method.
func (m *MockStore) SaveShortURL(key, value string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SaveShortURL", key, value)
}

// SaveShortURL indicates an expected call of SaveShortURL.
func (mr *MockStoreMockRecorder) SaveShortURL(key, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveShortURL", reflect.TypeOf((*MockStore)(nil).SaveShortURL), key, value)
}
